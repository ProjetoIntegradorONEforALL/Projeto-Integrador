services:
  db:
    image: postgres:latest
    container_name: postgres_db_container
    restart: always
    environment:
      POSTGRES_DB: myappdb
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mysecretpassword
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - app_network

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin_container
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: g.eliezer.rodrigues@gmail.com
      PGADMIN_DEFAULT_PASSWORD: postgreesqlpass
    ports:
      - "8081:80"
    networks:
      - app_network
    depends_on:
      - db

  redis:
    image: redis:latest
    container_name: redis_container
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redisdata:/data
    networks:
      - app_network

  node_back:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: nodejs_backend_container
    restart: always
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: development
      DB_HOST: db
      DB_USER: myuser
      DB_PASSWORD: mysecretpassword
      DB_NAME: myappdb
      DB_PORT: 5432
      PORT: 3000
      REDIS_HOST: redis
      REDIS_PORT: 6379
      FLASK_CHATBOT_URL: http://chatbot:5000
    volumes:
      - .:/app
    networks:
      - app_network
    depends_on:
      - db
      - redis
      - chatbot

  chatbot:
    build:
      context: ./chatbot_docker
      dockerfile: Dockerfile
    container_name: flask_app_container
    restart: always
    ports:
      - "5000:5000"
    environment:
      FLASK_ENV: development
      DATABASE_URL: postgresql://myuser:mysecretpassword@db:5432/myappdb
      REDIS_HOST: redis
      REDIS_PORT: 6379
    volumes:
      - ./chatbot_docker:/app
    networks:
      - app_network
    depends_on:
      - db
      - redis

  nodered:
    image: nodered/node-red:latest
    container_name: nodered_container
    restart: always
    ports:
      - "1880:1880"
    volumes:
      - nodered_data:/data
    networks:
      - app_network

volumes:
  pgdata:
  redisdata:
  nodered_data:

networks:
  app_network:
    driver: bridge